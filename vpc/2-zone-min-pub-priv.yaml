AWSTemplateFormatVersion: '2010-09-09'
Description: Creates a 3 zone public/private VPC

Parameters:

    VpcCidr:
        Type: String
        Default: 10.0.0.0/16

Resources:

    Vpc:
        Type: AWS::EC2::VPC
        Properties:
          CidrBlock: !Ref VpcCidr

    PublicSubnet1:
        Type: AWS::EC2::Subnet
        Properties:
            AvailabilityZone: !Sub '${AWS::Region}a'
            CidrBlock: !Select [ 0, !Cidr [ !GetAtt Vpc.CidrBlock, 1, 8 ]]
            VpcId: !Ref Vpc
            Tags:
              - Key: Name
                Value: !Sub '${AWS::StackName}-pub-${AWS::Region}a'
    
    PublicSubnet2:
        Type: AWS::EC2::Subnet
        Properties:
            AvailabilityZone: !Sub '${AWS::Region}b'
            CidrBlock: !Select [ 1, !Cidr [ !GetAtt Vpc.CidrBlock, 2, 8 ]]
            VpcId: !Ref Vpc
            Tags:
              - Key: Name
                Value: !Sub '${AWS::StackName}-pub-${AWS::Region}b'

    PrivateSubnet1:
        Type: AWS::EC2::Subnet
        Properties:
            AvailabilityZone: !Sub '${AWS::Region}a'
            CidrBlock: !Select [ 3, !Cidr [ !GetAtt Vpc.CidrBlock, 4, 8 ]]
            MapPublicIpOnLaunch: False
            VpcId: !Ref Vpc
            Tags:
              - Key: Name
                Value: !Sub '${AWS::StackName}-priv-${AWS::Region}a'

    PrivateSubnet2:
        Type: AWS::EC2::Subnet
        Properties:
            AvailabilityZone: !Sub '${AWS::Region}b'
            CidrBlock: !Select [ 4, !Cidr [ !GetAtt Vpc.CidrBlock, 5, 8 ]]
            MapPublicIpOnLaunch: False
            VpcId: !Ref Vpc
            Tags:
              - Key: Name
                Value: !Sub '${AWS::StackName}-priv-${AWS::Region}b'

    InternetGateway:
        Type: AWS::EC2::InternetGateway
        Properties: {}

    InternetGatewayAttachment:
        Type: AWS::EC2::VPCGatewayAttachment
        Properties: 
            InternetGatewayId: !Ref InternetGateway
            VpcId: !Ref Vpc

    NatGatewayEip:
        Type: AWS::EC2::EIP
        Properties:
            Domain: vpc

    NatGateway:
        Type: AWS::EC2::NatGateway
        Properties:
            AllocationId: !GetAtt 'NatGatewayEip.AllocationId'
            SubnetId: !Ref PublicSubnet1

    PublicRouteTable:
        Type: AWS::EC2::RouteTable
        Properties:
            VpcId: !Ref Vpc
            Tags:
                - Key: Name
                  Value: !Sub '${AWS::StackName}-pub-${AWS::Region}'

    PublicRoute:
        Type: AWS::EC2::Route
        Properties:
            RouteTableId: !Ref PublicRouteTable
            DestinationCidrBlock: 0.0.0.0/0
            GatewayId: !Ref InternetGateway

    PublicSubnetRouteTableAssociation1:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            SubnetId: !Ref PublicSubnet1
            RouteTableId: !Ref PublicRouteTable

    PublicSubnetRouteTableAssociation2:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            SubnetId: !Ref PublicSubnet2
            RouteTableId: !Ref PublicRouteTable

    PrivateRouteTable:
        Type: AWS::EC2::RouteTable
        Properties:
            VpcId: !Ref Vpc
            Tags:
                - Key: Name
                  Value: !Sub '${AWS::StackName}-priv-${AWS::Region}'

    PrivateRoute:
        Type: AWS::EC2::Route
        Properties:
            RouteTableId: !Ref PrivateRouteTable
            DestinationCidrBlock: 0.0.0.0/0
            NatGatewayId: !Ref NatGateway

    PrivateSubnetRouteTableAssociation1:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            SubnetId: !Ref PrivateSubnet1
            RouteTableId: !Ref PrivateRouteTable

    PrivateSubnetRouteTableAssociation2:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            SubnetId: !Ref PrivateSubnet2
            RouteTableId: !Ref PrivateRouteTable
