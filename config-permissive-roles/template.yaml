Transform: 'AWS::Serverless-2016-10-31'
AWSTemplateFormatVersion: '2010-09-09'
Description: Deploy config rule for overly permissive roles
Resources:

  CloudTrailBucket:
    Type: AWS::S3::Bucket
    Properties:
      # AccessControl: Private
      BucketName: !Sub 'permissive-roles-${AWS::AccountId}-${AWS::Region}'
      # PublicAccessBlockConfiguration:
      #   BlockPublicAcls: 'True'
      #   BlockPublicPolicy: 'True'
      #   IgnorePublicAcls: 'True'
      #   RestrictPublicBuckets: 'True'

  CloudTrailBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties: 
      Bucket: !Ref CloudTrailBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: AWSCloudTrailAclCheck
            Effect: Allow
            Principal:
              Service: cloudtrail.amazonaws.com
            Action: s3:GetBucketAcl
            Resource: !Sub 'arn:aws:s3:::${CloudTrailBucket}'
          - Sid: AWSCloudTrailWrite
            Effect: Allow
            Principal:
              Service: cloudtrail.amazonaws.com
            Action: s3:PutObject
            Resource: !Sub 'arn:aws:s3:::${CloudTrailBucket}/cloudtrail/AWSLogs/${AWS::AccountId}/*'
            Condition:
              StringEquals:
                's3:x-amz-acl': 'bucket-owner-full-control'
  LogGroup:
    Type: 'AWS::Logs::LogGroup'
    Properties:
      RetentionInDays: 120
  
  LogGroupRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Sid: AssumeRole1
          Effect: Allow
          Principal:
            Service: 'cloudtrail.amazonaws.com'
          Action: 'sts:AssumeRole'
      Policies:
      - PolicyName: 'cloudtrail-policy'
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - 'logs:CreateLogStream'
            - 'logs:PutLogEvents'
            Resource: !GetAtt 'LogGroup.Arn'

  Topic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: config-permissive-roles

  TopicPolicy:
    Type: AWS::SNS::TopicPolicy
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Sid: AWSCloudTrailSNSPolicy
          Effect: Allow
          Principal:
            Service: cloudtrail.amazonaws.com
          Resource: !Ref Topic
          Action: 'sns:Publish'
      Topics:
      - !Ref Topic

  TopicFunction:
    Type: AWS::Serverless::Function
    DependsOn: ['TopicPolicy']
    Properties:
      Handler: cloudtrail_lambda_handler.handler
      Runtime: python3.7
      CodeUri: ./src
      Description: Processes CloudTrail events from topic
      MemorySize: 1024
      Timeout: 15
      Policies:
        - AWSLambdaExecute
      Events:
        CloudTrailLog:
          Type: SNS
          Properties:
            Topic: !Ref Topic
            
  CloudTrail:
    Type: AWS::CloudTrail::Trail
    DependsOn: ['CloudTrailBucketPolicy']
    Properties: 
      CloudWatchLogsLogGroupArn: !GetAtt 'LogGroup.Arn'
      CloudWatchLogsRoleArn: !GetAtt 'LogGroupRole.Arn'
      IncludeGlobalServiceEvents: True
      IsLogging: True
      IsMultiRegionTrail: True
      S3BucketName: !Ref CloudTrailBucket
      S3KeyPrefix: cloudtrail/
      SnsTopicName: !GetAtt 'Topic.TopicName'
      TrailName: PermissiveRolesCloudTrail
      